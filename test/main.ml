(*********************************************************************************)
(*  dunolint-actions - Reusable GitHub Actions for the dunolint linter tool      *)
(*  SPDX-FileCopyrightText: 2024-2025 Mathieu Barbin <mathieu.barbin@gmail.com>  *)
(*  SPDX-License-Identifier: MIT                                                 *)
(*********************************************************************************)

(* CR mbarbin: Next-steps

   - [x] replace the output by an empty but valid config.
   - [ ] start adding some rules to validate the setup.

   Currently we have an invalid config ("Hello") so we can do one run and verify
   that the lint-check will exit with a non-zero code. *)

open Dunolint.Config.Std

let skip_paths = [ path (glob "_build/**") ]
let rules = []

let config =
  let skip_subtree = cond [ or_ skip_paths, skip_subtree ] in
  Dunolint.Config.create ~skip_subtree ~rules ()
;;

let () =
  print_endline ";; This file is generated by [main.ml]. Do not edit!";
  print_endline (Sexplib0.Sexp.to_string_hum (Dunolint.Config.sexp_of_t config));
  ()
;;
